---
import type { GetStaticPaths } from 'astro'
import { getCollection, getEntry } from 'astro:content'
import { format, useTranslations } from 'astro-nanointl'
import { isDefaultLocale } from '~/utils/i18n'

import HomeLayout from '~/layouts/HomeLayout.astro'
import Container from '~/components/common/Container.html'
import Head from '~/components/common/Head.astro'
import { BrandPattern } from '~/components/marketing'
import { LocaleSwitcher } from '~/components/navigation'


export const getStaticPaths = (async () => {
  const pages = await getCollection('pages')

  return pages.map((page) => {
    const [locale, slug] = page.slug.split('/')
    return {
      params: {
        locale: isDefaultLocale(locale) ? undefined : locale,
        slug,
      },
      props: { page },
    }
  })
}) satisfies GetStaticPaths

const locale = Astro.currentLocale!

const { page } = Astro.props
const { Content } = await page.render()

const translations = await getEntry('translations', `${locale}/components/marketing/legal`)
const t = useTranslations({
  lastUpdate: 'Last updated',
}, {
  locale,
  data: translations?.data,
})

const altPages = (
  await getCollection('pages', ({ data }) => data.canonicalId === page.data.canonicalId)
).map(page => page.slug)

---

<HomeLayout>
  <Head
    slot="head"
    title={page.data.title}
    description={page.data.description}
    languageAlternates={altPages}
  />
  <LocaleSwitcher
    slot="locale-switcher"
    links={altPages}
  />
  <div class="relative z-0 bg-indigo-700 text-white">
    <BrandPattern />
    <Container>
      <div class="pb-12 pt-16 lg:pt-24">
        <div class="mx-auto max-w-2xl lg:max-w-none">
          <h1 class="text-3xl font-bold tracking-tight hyphens-auto sm:text-4xl">{ page.data.title }</h1>
          <p class="mt-6 text-indigo-100 leading-7">
            {page.data.updatedAt
              ? (
                  <>
                    { t.lastUpdate }
                    <time datetime={page.data.updatedAt.toISOString()}>
                      {format(locale).date(page.data.updatedAt, {
                        dateStyle: 'short',
                      })}
                    </time>
                  </>
                )
              : page.data.description}
          </p>
        </div>
      </div>
    </Container>
  </div>
  <Container>
    <div class="pb-16 pt-12 lg:pb-24">
      <div class="mx-auto max-w-2xl lg:max-w-none">
        <div class="underline-offset-5 prose prose-zinc">
          <Content />
        </div>
      </div>
    </div>
  </Container>
</HomeLayout>

<script>
(() => {
  const span = document.getElementById('email-placeholder')

  if (span === null) {
    return
  }

  span.innerHTML = '<' + 'a' + ' ' + 'h' + 'r' + 'e' + 'f' + '=' + '\'' + '&' + '#' + '1' + '0' + '9' + ';' + 'a' + 'i' + '&' + '#' + '1' + '0' + '8' + ';' + 't' + '&' + '#' + '1' + '1' + '1' + ';' + '&' + '#' + '5' + '8' + ';' + 'i' + '&' + '#' + '3' + '7' + ';' + '&' + '#' + '5' + '4' + ';' + 'E' + 'f' + '&' + '#' + '1' + '1' + '1' + ';' + '&' + '#' + '6' + '4' + ';' + 'i' + '%' + '7' + '&' + '#' + '5' + '0' + ';' + '&' + '#' + '1' + '0' + '1' + ';' + '%' + '6' + 'E' + '%' + '6' + '1' + '&' + '#' + '4' + '6' + ';' + 'e' + 'e' + '\'' + '>' + 'i' + 'n' + 'f' + 'o' + '&' + '#' + '6' + '4' + ';' + 'i' + 'r' + '&' + '#' + '1' + '0' + '1' + ';' + '&' + '#' + '1' + '1' + '0' + ';' + 'a' + '&' + '#' + '4' + '6' + ';' + 'e' + 'e' + '<' + '/' + 'a' + '>'
})()
</script>
